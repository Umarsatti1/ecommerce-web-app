'use client'

import { useState, useEffect } from 'react'
import { ArrowLeft, ArrowRight, ArrowRightIcon } from 'lucide-react'
import { Link } from 'react-router-dom'

interface CarouselItem {
  id: number
  title: string
  subtitle: string
  description: string
  image: string
}

const carouselItems: CarouselItem[] = [
  {
    id: 1,
    title: "Fall - Winter Collections 2030",
    subtitle: "SUMMER COLLECTION",
    description: "A specialist label creating luxury essentials. Ethically crafted with an unwavering commitment to exceptional quality.",
    image: "/images/carousel-1.jpg",
  },
  {
    id: 2,
    title: "Spring Collection 2030",
    subtitle: "NEW ARRIVALS",
    description: "Discover our latest collection of premium essentials designed for the modern lifestyle.",
    image: "/images/carousel-2.jpg",
  },
  {
    id: 3,
    title: "Summer Essentials",
    subtitle: "FEATURED COLLECTION",
    description: "Elevate your wardrobe with our curated selection of timeless pieces.",
    image: "/images/carousel-3.jpg",
  },
]

export default function HomePage() {
  const [currentSlide, setCurrentSlide] = useState(0)
  const [isAnimating, setIsAnimating] = useState(false)

  const goToSlide = (index: number) => {
    if (!isAnimating && index !== currentSlide) {
      setIsAnimating(true)
      setCurrentSlide(index)
      setTimeout(() => setIsAnimating(false), 500)
    }
  }

  const nextSlide = () => {
    goToSlide((currentSlide + 1) % carouselItems.length)
  }

  const previousSlide = () => {
    goToSlide(currentSlide === 0 ? carouselItems.length - 1 : currentSlide - 1)
  }

  useEffect(() => {
    const handleKeyDown = (e: KeyboardEvent) => {
      if (e.key === 'ArrowLeft') {
        previousSlide()
      } else if (e.key === 'ArrowRight') {
        nextSlide()
      }
    }

    window.addEventListener('keydown', handleKeyDown)
    return () => window.removeEventListener('keydown', handleKeyDown)
  }, [currentSlide])

  return (
    <div>
      {/* Carousel Section */}
      <div className="relative h-[600px] w-full overflow-hidden">
        {carouselItems.map((item, index) => (
          <div
            key={item.id}
            className={`absolute inset-0 h-full w-full transition-opacity duration-500 ${
              index === currentSlide ? 'opacity-100' : 'opacity-0 pointer-events-none'
            }`}
          >
            <div className="relative h-full w-full">
              <img
                src={item.image}
                alt={item.title}
                className="h-full w-full object-cover"
              />
              <div className="absolute inset-0 bg-black/10">
                <div className="container mx-auto flex h-full items-center px-4">
                  <div className="max-w-2xl">
                    <span className="mb-4 inline-block text-sm font-medium tracking-wider text-red-500">
                      {item.subtitle}
                    </span>
                    <h1 className="mb-6 text-5xl font-bold text-black">
                      {item.title}
                    </h1>
                    <p className="mb-8 text-lg text-gray-800">
                      {item.description}
                    </p>
                    <Link 
                      to="/catalog"
                      className="inline-flex items-center gap-2 bg-black px-6 py-3 text-sm font-medium text-white transition-colors hover:bg-gray-800"
                    >
                      SHOP NOW
                      <ArrowRightIcon className="h-4 w-4" />
                    </Link>
                  </div>
                </div>
              </div>
            </div>
          </div>
        ))}

        <button
          onClick={previousSlide}
          className="absolute left-4 top-1/2 -translate-y-1/2 rounded-full bg-white/80 p-2 text-gray-800 transition-colors hover:bg-white"
          aria-label="Previous slide"
        >
          <ArrowLeft className="h-6 w-6" />
        </button>
        <button
          onClick={nextSlide}
          className="absolute right-4 top-1/2 -translate-y-1/2 rounded-full bg-white/80 p-2 text-gray-800 transition-colors hover:bg-white"
          aria-label="Next slide"
        >
          <ArrowRight className="h-6 w-6" />
        </button>

        <div className="absolute bottom-4 left-1/2 flex -translate-x-1/2 gap-2">
          {carouselItems.map((_, index) => (
            <button
              key={index}
              onClick={() => goToSlide(index)}
              className={`h-2 w-2 rounded-full transition-all ${
                index === currentSlide ? 'bg-white w-4' : 'bg-white/50'
              }`}
              aria-label={`Go to slide ${index + 1}`}
            />
          ))}
        </div>
      </div>

      {/* New Arrivals Section */}
      <section className="py-16">
        <div className="container mx-auto px-4">
          <h2 className="mb-2 text-center text-3xl font-bold">New Arrivals</h2>
          <p className="mb-12 text-center text-gray-600">
            Far far away, behind the word mountains, far from the countries Vokalia and Consonantia
          </p>

        
        </div>
      </section>
    </div>
  )
}
