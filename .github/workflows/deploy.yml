name: Deploy to AWS ECS

on:
  push:
    branches:
      - product-changes # Trigger deployment on push to the product-changes branch

jobs:
  deploy:
    name: Deploy to AWS ECS
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code from GitHub
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Log in to AWS ECR
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      # Step 3: Build the Docker image
      - name: Build Docker image
        run: |
          docker build -t ${{ secrets.AWS_ECR_REPO_NAME }}:latest .

      # Step 4: Tag the Docker image for ECR
      - name: Tag Docker image
        run: |
          docker tag ${{ secrets.AWS_ECR_REPO_NAME }}:latest ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.AWS_ECR_REPO_NAME }}:latest

      # Step 5: Push Docker image to ECR
      - name: Push to Amazon ECR
        run: |
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.AWS_ECR_REPO_NAME }}:latest

      # Step 6: Deploy the image to ECS
      - name: Deploy to Amazon ECS
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ecs-task-definition.json
          service: ${{ secrets.AWS_ECS_SERVICE_NAME }}
          cluster: ${{ secrets.AWS_ECS_CLUSTER_NAME }}
          wait-for-service-stability: true